syntax = "proto3";

package envoy.config.filter.network.dubbo_proxy.v2alpha1;
option go_package = "v2";

// import "envoy/api/v2/core/base.proto";
import "envoy/api/v2/route/route.proto";
import "envoy/type/range.proto";

import "google/protobuf/wrappers.proto";

import "validate/validate.proto";
import "gogoproto/gogo.proto";

// [#protodoc-title: Dubbo route configuration]

message RouteConfiguration {
  // The name of the route configuration. Reserved for future use in asynchronous route discovery.
  string name = 1;

  // The interface name of the service.
  string interface = 2;

  // Which group does the interface belong to.
  string group = 3;

  // The version number of the interface.
  string version = 4;

  // The list of routes that will be matched, in order, against incoming requests. The first route
  // that matches will be used.
  repeated Route routes = 5 [(gogoproto.nullable) = false];
}

message Route {
  // Route matching prarameters.
  RouteMatch match = 1 [(validate.rules).message.required = true, (gogoproto.nullable) = false];

  // Route request to some upstream cluster.
  RouteAction route = 2 [(validate.rules).message.required = true, (gogoproto.nullable) = false];
}

message MethodMatch {
  // The name of the method.
  string name = 1;

  message Parameter {
    // Parameter index, starting from 0.
    uint32 index = 1;

    // Parameter types, only basic data types are supported.
    string type = 2;

    oneof parameter_match_specifier {
      // If specified, header match will be performed based on the value of the header.
      string exact_match = 3;

      // If specified, header match will be performed based on range.
      // The rule will match if the request header value is within this range.
      // The entire request header value must represent an integer in base 10 notation: consisting
      // of an optional plus or minus sign followed by a sequence of digits. The rule will not match
      // if the header value does not represent an integer. Match will fail for empty values,
      // floating point numbers or if only a subsequence of the header value is an integer.
      //
      // Examples:
      //
      // * For range [-10,0), route will match for header value -1, but not for 0,
      // "somestring", 10.9,
      //   "-1somestring"
      envoy.type.Int64Range range_match = 4;
    }
  }

  // Method parameter definition.
  repeated Parameter params_match = 2;
}

message RouteMatch {
  oneof match_specifier {
    // If specified, the route must exactly match the request method name. As a special case, an
    // empty string matches any request method name.
    MethodMatch method = 1;
  }

  // Specifies a set of headers that the route should match on. The router will check the requestâ€™s
  // headers against all the specified headers in the route config. A match will happen if all the
  // headers in the route are present in the request with the same values (or based on presence if
  // the value field is not in the config).
  repeated envoy.api.v2.route.HeaderMatcher headers = 2;
}

// [#comment:next free field: 2]
message RouteAction {
  oneof cluster_specifier {
    option (validate.required) = true;

    // Indicates the upstream cluster to which the request should be routed.
    string cluster = 1;

    // Multiple upstream clusters can be specified for a given route. The
    // request is routed to one of the upstream clusters based on weights
    // assigned to each cluster.
    WeightedCluster weighted_clusters = 2;
  }
}

// Allows for specification of multiple upstream clusters along with weights that indicate the
// percentage of traffic to be forwarded to each cluster. The router selects an upstream cluster
// based on these weights.
message WeightedCluster {
  message ClusterWeight {
    // Name of the upstream cluster.
    string name = 1 [(validate.rules).string.min_bytes = 1];

    // When a request matches the route, the choice of an upstream cluster is determined by its
    // weight. The sum of weights across all entries in the clusters array determines the total
    // weight.
    google.protobuf.UInt32Value weight = 2 [(validate.rules).uint32.gte = 1];
  }

  // Specifies one or more upstream clusters associated with the route.
  repeated ClusterWeight clusters = 1 [(validate.rules).repeated .min_items = 1];
}
